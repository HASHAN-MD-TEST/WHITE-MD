const config = require('../config');
const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');
const axios = require('axios');

cmd({
    pattern: "menu",
    desc: "menu the bot",
    category: "menu",
    react: "‚ö°",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ‚îÅ„Äî *HASHAN-MD* „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚òÖ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚òÖ‚îÇ Owner : *HASHAN-MD*
‚îÉ‚òÖ‚îÇ Baileys : *Multi Device*
‚îÉ‚òÖ‚îÇ Type : *NodeJs*
‚îÉ‚òÖ‚îÇ Platform : *Heroku*
‚îÉ‚òÖ‚îÇ Mode : *Public*
‚îÉ‚òÖ‚îÇ Prifix : *[${config.PREFIX}]*
‚îÉ‚òÖ‚îÇ Version : *v 1.0.0*
‚îÉ‚òÖ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑
*‚ï≠‚îÅ‚îÅ„Äî Menu List „Äï‚îÅ‚îÅ‚îà‚ä∑*
*‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè*
*‚îÉ‚óà‚îÉ‚Ä¢ ‚ù§Ô∏è‚Äçüî•aimenu‚ù§Ô∏è‚Äçüî•*
*‚îÉ‚óà‚îÉ‚Ä¢ ü´Äanmiemenuü´Ä*
*‚îÉ‚óà‚îÉ‚Ä¢ üë•convertmenuüë•*
*‚îÉ‚óà‚îÉ‚Ä¢ ü§πüèªfunmenuü§πüèª*
*‚îÉ‚óà‚îÉ‚Ä¢ üì∏dlmenuüì∏*
*‚îÉ‚óà‚îÉ‚Ä¢ üëªlistcmdüëª*
*‚îÉ‚óà‚îÉ‚Ä¢ ü§åüèªmainmenuü§åüèª*
*‚îÉ‚óà‚îÉ‚Ä¢ üßëüèªgroupmenuüßíüèª*
*‚îÉ‚óà‚îÉ‚Ä¢ üëëallmenuüëë*
*‚îÉ‚óà‚îÉ‚Ä¢ üíÄownermenuüíÄ*
*‚îÉ‚óà‚îÉ‚Ä¢ üåêothermenuüåê*
*‚îÉ‚óà‚îÉ‚Ä¢ ‚úÖrepo‚úÖ*
*‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑*
*‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑*
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

        // Send audio
        await conn.sendMessage(from, {
            audio: { url: 'https://github.com/JawadYTX/KHAN-DATA/raw/refs/heads/main/autovoice/sigma.m4a' },
            mimetype: 'audio/mp4',
            ptt: true
        }, { quoted: mek });
        
    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// dlmenu

cmd({
    pattern: "dlmenu",
    desc: "menu the bot",
    category: "menu",
    react: "‚§µÔ∏è",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Download Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ mediafire
‚îÉ‚óà‚îÉ‚Ä¢ apk
‚îÉ‚óà‚îÉ‚Ä¢ img
‚îÉ‚óà‚îÉ‚Ä¢ play
‚îÉ‚óà‚îÉ‚Ä¢ video
‚îÉ‚óà‚îÉ‚Ä¢ song
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// group menu

cmd({
    pattern: "groupmenu",
    desc: "menu the bot",
    category: "menu",
    react: "‚§µÔ∏è",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try
       {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Group Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ add
‚îÉ‚óà‚îÉ‚Ä¢ remove
‚îÉ‚óà‚îÉ‚Ä¢ kick
‚îÉ‚óà‚îÉ‚Ä¢ delete 
‚îÉ‚óà‚îÉ‚Ä¢ del
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// fun menu

cmd({
    pattern: "funmenu",
    desc: "menu the bot",
    category: "menu",
    react: "üòé",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {

        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Fun Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ hack
‚îÉ‚óà‚îÉ‚Ä¢ animegirl
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD-session-new ',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// other menu

cmd({
    pattern: "othermenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü§ñ",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Other Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ fancy
‚îÉ‚óà‚îÉ‚Ä¢ news
‚îÉ‚óà‚îÉ‚Ä¢ movie
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// main menu

cmd({
    pattern: "mainmenu",
    desc: "menu the bot",
    category: "menu",
    react: "üóø",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Main Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ ping
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ runtime
‚îÉ‚óà‚îÉ‚Ä¢ owner
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ system
‚îÉ‚óà‚îÉ‚Ä¢ ping2
‚îÉ‚óà‚îÉ‚Ä¢ settings
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// owner menu

cmd({
    pattern: "ownermenu",
    desc: "menu the bot",
    category: "menu",
    react: "üî∞",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Owner Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ owner
‚îÉ‚óà‚îÉ‚Ä¢ menu
‚îÉ‚óà‚îÉ‚Ä¢ menu2
‚îÉ‚óà‚îÉ‚Ä¢ system
‚îÉ‚óà‚îÉ‚Ä¢ hack
‚îÉ‚óà‚îÉ‚Ä¢ block
‚îÉ‚óà‚îÉ‚Ä¢ setpp
‚îÉ‚óà‚îÉ‚Ä¢ restart
‚îÉ‚óà‚îÉ‚Ä¢ shutdown
‚îÉ‚óà‚îÉ‚Ä¢ alive
‚îÉ‚óà‚îÉ‚Ä¢ ping 
‚îÉ‚óà‚îÉ‚Ä¢ gjid
‚îÉ‚óà‚îÉ‚Ä¢ jid
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

// convert menu

cmd({
    pattern: "convertmenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü•Ä",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Convert Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ sticker
‚îÉ‚óà‚îÉ‚Ä¢ fancy
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// anmie menu 

cmd({
    pattern: "animemenu",
    desc: "menu the bot",
    category: "menu",
    react: "üßö",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
          let dec = `‚ï≠‚îÅ‚îÅ„Äî *Anime Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ dog
‚îÉ‚óà‚îÉ‚Ä¢ animegirl
‚îÉ‚óà‚îÉ‚Ä¢ anime
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});


// ai menu 

cmd({
    pattern: "aimenu",
    desc: "menu the bot",
    category: "menu",
    react: "ü§ñ",
    filename: __filename
}, 
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let dec = `‚ï≠‚îÅ‚îÅ„Äî *Ai Menu* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑‡πè
‚îÉ‚óà‚îÉ‚Ä¢ ai
‚îÉ‚óà‚îÉ‚Ä¢ deepseek
‚îÉ‚óà‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ${config.CAPTION}`;

        await conn.sendMessage(
            from,
            {
                image: { url: `https://res.cloudinary.com/df2rnoijw/image/upload/v1753003088/hogovkhb9ftlcwi52c6s.jpg` },
                caption: dec,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363395674230271@newsletter',
                        newsletterName: '‚ú®Ô∏è HASHAN-MD',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.log(e);
        reply(`${e}`);
    }
});

